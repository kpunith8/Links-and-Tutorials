By: Samer Buna

https://gist.github.com/samerbuna

edgecoders.com

jscomplete.com/repl


Class can change the state of a class not the props of the class.

class MyComponent extends React.Component {
	render() {
		return ();
	}
}

// Example ran in jscomplete - communicating with other componets and usage of props

class Button extends React.Component {
  state = {counter: 0};
  
  handleClick = () => {
  	this.props.onClickFunction(this.props.incrementValue);
  };
  
  render() {
  	return(
    	<button onClick={this.handleClick}>
      	+{this.props.incrementValue}
      </button>
    );
  }
}

const Result = (props) => {
  	return(
    	<div>{props.counter}</div>
    );
  };

class App extends React.Component {
  state = {counter: 0};
  
  incrementCounter = (incrementValue) => {
  	this.setState((prevState) => ({
      counter: prevState.counter + incrementValue
    }));
  }
  
  render() {
    	return(
        <div>
          <Button incrementValue={1} onClickFunction={this.incrementCounter}/>
          <Button incrementValue={5} onClickFunction={this.incrementCounter}/>
          <Button incrementValue={7} onClickFunction={this.incrementCounter}/>
          <Button incrementValue={100} onClickFunction={this.incrementCounter}/>
          <Result counter={this.state.counter}/>
        </div>
      );
  }
}

ReactDOM.render(<App />, mountNode);


go to -> https://api.github.com/ grab the user_url and put in browser and specify the username and get the avatar
url 

css style can be used with style={{display: ''inline-block', marginLeft:10}}

To get the data from a input field:

ref = {(input) => this.userInput = input} -> one way of getting the data from the input and can be accessed using
 'this.userInput.value' */ 


// Second example working with data - Add Github users using github api

const Card = (props) => {
	return(
  	<div style={{margin: '1em'}}>
    	<img width="75" src={props.avatar_url} />
      <div style={{display: 'inline-block', marginLeft: 10}}> 
      	<div style={{fontSize: '1.25em', fontWeight: 'bold'}}>{props.name}</div>
        <div>{props.company}</div>
      </div>
    </div>
  );
};

class Form extends React.Component {
	state = { userName: ''};
  
	handleSubmit = (event) => {
  	event.preventDefault();
    axios.get(`https://api.github.com/users/${this.state.userName}`)
    .then(resp => {
    	this.props.onSubmit(resp.data);
      this.setState({userName: ''});
    });
  };
  
	render() {
  	return(
      <form onSubmit={this.handleSubmit}>
      	<input type="text" 
      	value={this.state.userName}
        onChange={(event) => this.setState({ userName: event.target.value })}
        placeholder="Github username" required/>
        
      	<button type="submit">Add User</button>
      </form>
    );
  }
}

class App extends React.Component {
  state = {
  	cards: []
  }; 
  
  addNewCard = (cardInfo) => {
  	this.setState((prevState) => ({
    	cards: prevState.cards.concat(cardInfo)
    }));
  };
  
  render() {
  	return(
    	<div>
    		<Form onSubmit={this.addNewCard}/>
      	<CardList cards={this.state.cards} />
      </div>
    );
  }
}

const CardList = (props) => {
	return(
  	<div>
    	{props.cards.map(card => <Card key={card.id} {...card} />)} { /* ... spread operator */ }
    </div>
  );
};

ReactDOM.render(<App />, mountNode);

// React official site - example for key and constructing UI

function Blog(props) {
  const sidebar = (
    <ul>
      {props.posts.map((post) =>
        <li key={post.id}>
          {post.title}
        </li>
      )}
    </ul>
  );
  const content = props.posts.map((post) =>
    <div key={post.id}>
      <h3>{post.title}</h3>
      <p>{post.content}</p>
    </div>
  );
  return (
    <div>
      {sidebar}
      <hr />
      {content}
    </div>
  );
}

const posts = [
  {id: 1, title: 'Hello World', content: 'Welcome to learning React!'},
  {id: 2, title: 'Installation', content: 'You can install React from npm.'}
];
ReactDOM.render(
  <Blog posts={posts} />,
  document.getElementById('root')
);

// Building the game interface

Font awesome for icons:




